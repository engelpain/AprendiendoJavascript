/* ---------------------------------------------------------------------------------------------------------------------
Variables
  Las variables en JavaScript no requieren declarar su tipo, se crean sencillamente escribiendo una palabra seguida de
  un igual "=" y el valor que se le quiera dar. Por buenas pr치cticas de desarrollo, se antepone la palabra "var" a las
  variables, sin embargo, no es nesesaria.
  Los tipos de variables pueden ser: indefinidas, cadenas, num칠ricas, booleanas, matrices, objectos y hasta funciones.
  Nota: La declaraci칩n de variables a partir de EcmaScript6 utilizan las palabras reservadas "var", "let" y "const",
  y sus usos son distintos:
    var: es utilizado para declarar variables de de bloque como globales, es decir, podr치n ser consultadas en cualquier
    parte del c칩digo, o solamente en la funci칩n o bloque donde fue declarada.
    let: es utilizado para declarar variables de bloque, es decir, con valor 칰nicamente donde fueron declaradas.
    const: es utilizado para declarar constantes tanto de bloque como globales.
--------------------------------------------------------------------------------------------------------------------- */

// Variable Indefinida
var indefinida = undefined;

// Variable tipo Cadena de caracteres
var cadena = 'Ezio';

// Nota: JavaScript permite en el uso de emojis en los valores de las variables
var emoji = "游땸";

// Variable tipo entero
var entero = 23;

// Variable tipo float
var flotante = 12.5;

// Variable tipo bool
var booleano = false;

// Variable tipo array (matrices)
var matriz = ['Elemento 1', 2, 'Elemento 3'];

// Expresi칩n regular
var expresion = /[0-9]/;

// Funci칩n contenida en una variable
var funcion = function function_name(){};

// Constante, mantiene su valor. Las constantes deben ser declaradas con may칰sculas sostenidas
const CONSTANTE = "valor";

// variables tipo objeto, conocidos como JSON: Javascript Object Notation
var objetos = {

  // Atributos
  nombre: "Universo",
  edad: 13835000000,

  // M칠todos
  darEdad: function(){
    return 'El ' + this.nombre + ' tiene ' + this.edad + ' a침os.';
  }
};

/* ---------------------------------------------------------------------------------------------------------------------
Scope
El Scope es el sitio donde se define una variable. Hay dos tipos de scope: Global y de bloque, y son la equivalencia
entre variables p칰blicas y privadas en otros lenguajes.
Las variables globales son las que pueden ser le칤das en cualquier parte del c칩digo luego de estar declaradas, y pueden
ser redeclaradas indefinidamente en cualquier sitio.
Por contraparte las variables de bloque solamente podr치n ser le칤das en el entorno donde fueron escritas, es decir,
si se declara una variable dentro de una funci칩n o una condicional, solamente podr치 ser le칤da, modificada o destru칤da
en el bloque donde se cre칩.
--------------------------------------------------------------------------------------------------------------------- */
// var es la palabra reservada para las variables globales.
var variableGlobal = "Creada";

// Las variables tipo var pueden reinicializarse indefinidamente, por tanto volver a crearla no arrojar칤a un error. 
var variableGlobal = "Creada por segunda vez";

// let es la palabra reservada para las variables de bloque.
let variableDeBloque = "Creada";

// Las variables tipo let no pueden reinicializarse indefinidamente, por tanto volver a crearla arrojar칤a un error. 
let variableDeBloque = "Creada por segunda vez";

// Solo se puede administrar el valor de una variable desde el bloque donde se cre칩, por tanto, en este ejemplo si se
// intentara solicitar el valor de la variable, arrojar칤a un error.
if ( 1 === 0 ) {
  let variableDeBloque = "Creada";
}
